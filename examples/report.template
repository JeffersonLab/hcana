
           This is a report template file.

It can be used to create simple run summary/statistics output files.

To produce a report, put in your analysis steering script, the line 

   analyzer->PrintReport(templatefilename, reportfilename); 

where analyzer is your analyzer object.

The template file is copied to the output file, except that anything
inside of the braces gets evaluated.  If the braces contain a string variable,
the value of variable replaces the braced name.  Otherwise what is
in the braces is evaluated as an expression.  Currently the expression can be
composed of Hall C style parameter variables, cut results (not really too usefull)
and cut statistics.  (Number of times called and number of times passed.)

For example, {100*Pedestal_event.npassed/Pedestal_event.ncalled:%.2f}% is the 
percentage of events that were pedestal events.
Number of pedestal events:  {Pedestal_event.npassed}  {Pedestal_event.ncalled}
Number of HMS events:  {HMS_event.npassed}  {HMS_event.ncalled}
Number of scalar   events:  {scalar_event.npassed}  {scalar_event.ncalled}
Number of hfoundtrack  events:  {hFoundTrack.npassed}  
 hFoundTrack/Number of HMS events: {hFoundTrack.npassed/HMS_event.npassed:%.5f}


*****************************
* HMS TRACKING EFFICIENCIES *
*****************************
htrig                          :   {hmscoin_event.npassed}
hhitslt = passed hits/cham     :   {hmsHitsLt.npassed}
hhitsplanes = +planes >= 5/6   :   {hmsHitsPlanes.npassed}
hhitsplanessps = + sps         :   {hSpacePoints.npassed}
hhitsplanesspsstubs +stub      :   {hSpacePointsStub.npassed}
hsfoundtrack                   :   {hFoundTrack.npassed}
hstublt = passed stub tests    :   {hStubLT.npassed}
h1hitslt                       :   {hms1HitsLt.npassed}
h2hitslt                       :   {hms2HitsLt.npassed}
h1planesgt                     :   {hmsDC1PlanesGT.npassed}
h2planesgt                     :   {hmsDC2PlanesGT.npassed}
hplanesgt = gt 5 planes/cham   :   {hmsPlanseGT.npassed}
f1hspacepoints                 :   {f1HSpacePoints.npassed}
f2hspacepoints                 :   {f2HSpacePoints.npassed}
htest1=p hits/planes, f sp     :   {hTest1.npassed}
htest2=p sp, f stubs           :   {hTest2.npassed}
hdid                           :   {HMSScinDid.npassed}
hdide                          :   {HMSScinDide.npassed}
hdidh                          :   {HMSScinDidh.npassed}
hscinshould                    :   {HMSScinShould.npassed}
hscinshoulde                   :   {HMSScinShoulde.npassed}
hscinshouldh                   :   {HMSScinShouldh.npassed}
SING FID TRACK EFFIC           : {HMSScinDid.npassed/(HMSScinShould.npassed+0.0001):%8.4f} +- {(sqrt(HMSScinShould.npassed-HMSScinDid.npassed)/(HMSScinShould.npassed+.0001)):%8.4f}
E SING FID TRACK EFFIC         : {HMSScinDide.npassed/(HMSScinShoulde.npassed+0.0001):%8.4f} +- {(sqrt(HMSScinShoulde.npassed-HMSScinDide.npassed)/(HMSScinShoulde.npassed+.0001)):%8.4f}
HADRON SING FID TRACK EFFIC    : {HMSScinDidh.npassed/(HMSScinShouldh.npassed+0.0001):%8.4f} +- {(sqrt(HMSScinShouldh.npassed-HMSScinDidh.npassed)/(HMSScinShouldh.npassed+.0001)):%8.4f}

* hms coincidences...
ctrig                          :   {coin_event.npassed}
bhhitslt = passed hits/cham    :   {bhmsHitsLt.npassed}
bhhitsplanes = +planes >= 5/6  :   {bhmsHitsPlanes.npassed}
bhhitsplanessps = + sps        :   {bhmsHitsPlanesSps.npassed}
bhhitsplanesspsstubs +stub     :   {bhmsHitsPlanesSpsStubs.npassed}
found track and ctrig          :   {bhmsFoundTrack.npassed}
bhstublt = passed stub tests   :   {bhmsStubLt.npassed}
bh1hitslt                      :   {bhms1HitsLt.npassed}
bh2hitslt                      :   {bhms2HitsLt.npassed}
bh1planesgt                    :   {bhmsDC1PlanesGT.npassed}
bh2planesgt                    :   {bhmsDC2PlanesGT.npassed}
bhplanesgt = gt 5 planes/cham  :   {bhmsPlanesGt.npassed}
f1bhspacepoints                :   {f1bhmsSpacepoints.npassed}
f2bhspacepoints                :   {f2bhmsSpacepoints.npassed}
bhtest1=p hits/planes, f sp    :   {bhmsTest1.npassed}
bhtest2=p sp, f stubs          :   {bhmsTest2.npassed}
bhdid                          :   {BHMSScinDid.npassed}
bhdide                         :   {BHMSScinDide.npassed}
bhdidh                         :   {BHMSScinDidh.npassed}
bhscinshould                   :   {BHMSScinShould.npassed}
bhscinshoulde                  :   {BHMSScinShoulde.npassed}
bhscinshouldh                  :   {BHMSScinShouldh.npassed}
COIN FID TRACK EFFIC           : {BHMSScinDid.npassed/(BHMSScinShould.npassed+0.0001):%8.4f} +- {(sqrt(BHMSScinShould.npassed-BHMSScinDid.npassed)/(BHMSScinShould.npassed+.0001)):%8.4f}
E COIN FID TRACK EFFIC         : {BHMSScinDide.npassed/(BHMSScinShoulde.npassed+0.0001):%8.4f} +- {(sqrt(BHMSScinShoulde.npassed-BHMSScinDide.npassed)/(BHMSScinShoulde.npassed+.0001)):%8.4f}
HADRON COIN FID TRACK EFFIC    : {BHMSScinDidh.npassed/(BHMSScinShouldh.npassed+0.0001):%8.4f} +- {(sqrt(BHMSScinShouldh.npassed-BHMSScinDidh.npassed)/(BHMSScinShouldh.npassed+.0001)):%8.4f}
********************************************************************


*****************************
* RAW SOFTWARE EFFICIENCIES *
*****************************
"raw"  means one or more hits per dc plane.
"Good" means one or two  hits per dc plane.

rawhdc1x1   =    {h1hit1.npassed}   eff = {(h1hit1.npassed/hmsCham1Hits.npassed):%5.3f}  BAD = 0.95
rawhdc1y1   =    {h1hit2.npassed}   eff = {(h1hit2.npassed/hmsCham1Hits.npassed):%5.3f}  BAD = 0.95
rawhdc1u1   =    {h1hit3.npassed}   eff = {(h1hit3.npassed/hmsCham1Hits.npassed):%5.3f}  BAD = 0.95
rawhdc1v1   =    {h1hit4.npassed}   eff = {(h1hit4.npassed/hmsCham1Hits.npassed):%5.3f}  BAD = 0.95
rawhdc1y2   =    {h1hit5.npassed}   eff = {(h1hit5.npassed/hmsCham1Hits.npassed):%5.3f}  BAD = 0.95
rawhdc1x2   =    {h1hit6.npassed}   eff = {(h1hit6.npassed/hmsCham1Hits.npassed):%5.3f}  BAD = 0.95
rawhdc1     =    {hmsCham1Hits.npassed}   eff = {(hdc_cham_hits[0]/hmsCham1Hits.npassed):%5.3f}  BAD = 0.99
rawhdc2x1   =    {h2hit1.npassed}   eff = {(h2hit1.npassed/hmsCham2Hits.npassed):%5.3f}  BAD = 0.95
rawhdc2y1   =    {h2hit2.npassed}   eff = {(h2hit2.npassed/hmsCham2Hits.npassed):%5.3f}  BAD = 0.95
rawhdc2y1   =    {h2hit3.npassed}   eff = {(h2hit3.npassed/hmsCham2Hits.npassed):%5.3f}  BAD = 0.95
rawhdc2v1   =    {h2hit4.npassed}   eff = {(h2hit4.npassed/hmsCham2Hits.npassed):%5.3f}  BAD = 0.95
rawhdc2y2   =    {h2hit5.npassed}   eff = {(h2hit5.npassed/hmsCham2Hits.npassed):%5.3f}  BAD = 0.95
rawhdc2x2   =    {h2hit6.npassed}   eff = {(h2hit6.npassed/hmsCham2Hits.npassed):%5.3f}  BAD = 0.95
rawhdc2     =    {hmsCham2Hits.npassed}   eff = {(hdc_cham_hits[1]/hmsCham2Hits.npassed):%5.3f}  BAD = 0.99

goodhdc1x1  =   {goodHDC1x1.npassed}   eff = {(goodHDC1x1.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc1y1  =   {goodHDC1y1.npassed}   eff = {(goodHDC1y1.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc1u1  =   {goodHDC1u1.npassed}   eff = {(goodHDC1u1.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc1v1  =   {goodHDC1v1.npassed}   eff = {(goodHDC1v1.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc1y2  =   {goodHDC1y2.npassed}   eff = {(goodHDC1y2.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc1x2  =   {goodHDC1x2.npassed}   eff = {(goodHDC1x2.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc1    =   {goodHDC1.npassed}   eff = {(goodHDC1.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.90
goodhdc2x1  =   {goodHDC2x1.npassed}   eff = {(goodHDC2x1.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc2x1  =   {goodHDC2y1.npassed}   eff = {(goodHDC2y1.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc2x1  =   {goodHDC2u1.npassed}   eff = {(goodHDC2u1.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc2x1  =   {goodHDC2v1.npassed}   eff = {(goodHDC2v1.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc2x1  =   {goodHDC2y2.npassed}   eff = {(goodHDC2y2.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc2x1  =   {goodHDC2x2.npassed}   eff = {(goodHDC2x2.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.95
goodhdc2    =   {goodHDC2.npassed}   eff = {(goodHDC2.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.90
bothgoodhdc =   {bothGood.npassed}   eff = {(bothGood.npassed/(hmscoin_event.npassed+0.0001)):%5.3f}  BAD = 0.80

"hfoundtrack" based on analyzer variable HNTRACKS_FP.
"hcleantrack" based on analyzer variable HSNUM_FPTRACK (=foundtrack+chi2+PID).

hfoundtrack  = {hFoundTrack.npassed:%7d}   eff = {hFoundTrack.npassed/(hmscoin_event.npassed+0.0001):%5.3f}  BAD = .95
hfound1track = {hFound1Track.npassed:%7d}   eff = {hFound1Track.npassed/(hmscoin_event.npassed+.0001):%5.3f}
hfound2track = {hFound2Track.npassed:%7d}   eff = {hFound2Track.npassed/(hmscoin_event.npassed+.0001):%5.3f}
hfound3track = {hFound3Track.npassed:%7d}   eff = {hFound3Track.npassed/(hmscoin_event.npassed+.0001):%5.3f}
hfound4track = {hFound4Track.npassed:%7d}   eff = {hFound4Track.npassed/(hmscoin_event.npassed+.0001):%5.3f}

hcleantrack  = {hCleanTrack.npassed:%7d}   eff = {hCleanTrack.npassed/(hmscoin_event.npassed+0.0001):%5.3f}  BAD = .95
1hcleantrack = {1hCleanTrack.npassed:%7d}   eff = {1hCleanTrack.npassed/(hmscoin_event.npassed+0.0001):%5.3f}
2hcleantrack = {2hCleanTrack.npassed:%7d}   eff = {2hCleanTrack.npassed/(hmscoin_event.npassed+0.0001):%5.3f}
3hcleantrack = {3hCleanTrack.npassed:%7d}   eff = {3hCleanTrack.npassed/(hmscoin_event.npassed+0.0001):%5.3f}
4hcleantrack = {4hCleanTrack.npassed:%7d}   eff = {4hCleanTrack.npassed/(hmscoin_event.npassed+0.0001):%5.3f}

"Any"  means one or more hits per scint plane.
"Good" means one or two  hits per scint plane.

anyhs1x     = {anyhs1x.npassed:%7d}   eff = {anyhs1x.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .99
anyhs1y     = {anyhs1y.npassed:%7d}   eff = {anyhs1y.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .99
anyhs2x     = {anyhs2x.npassed:%7d}   eff = {anyhs2x.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .99
anyhs2y     = {anyhs2y.npassed:%7d}   eff = {anyhs2y.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .99

goodhs1x    = {goodhs1x.npassed:%7d}   eff = {goodhs1x.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .98
goodhs1y    = {goodhs1y.npassed:%7d}   eff = {goodhs1y.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .98
goodhs1     = {goodhs1.npassed:%7d}   eff = {goodhs1.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .96
goodhs2x    = {goodhs2x.npassed:%7d}   eff = {goodhs2x.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .98
goodhs2y    = {goodhs2y.npassed:%7d}   eff = {goodhs2y.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .98
goodhs2     = {goodhs2.npassed:%7d}   eff = {goodhs2.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .96
goodhs1s2   = {goodhs1s2.npassed:%7d}   eff = {goodhs1s2.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .95


********************
* HARDWARE SCALERS *
********************
General Format:
signal   =   counts (  rate-Hz )

S1       = {HSS1:%15.1f} [ {HSS1/HShCLOCK*1.0e6:%9.1f} ]
S2       = {HSS2:%15.1f} [ {HSS2/HShCLOCK*1.0e6:%9.1f} ]
S1X      = {HSS1X:%15.1f} [ {HSS1X/HShCLOCK*1.0e6:%9.1f} ]
S1Y      = {HSS1Y:%15.1f} [ {HSS1Y/HShCLOCK*1.0e6:%9.1f} ]
S2X      = {HSS2X:%15.1f} [ {HSS2X/HShCLOCK*1.0e6:%9.1f} ]
S2Y      = {HSS2Y:%15.1f} [ {HSS2Y/HShCLOCK*1.0e6:%9.1f} ]

hS1X     = {HShS1X:%15.1f} [ {HShS1X/HShCLOCK*1.0e6:%9.1f} ]
hS1Y     = {HShS1Y:%15.1f} [ {HShS1Y/HShCLOCK*1.0e6:%9.1f} ]
hS2X     = {HShS2X:%15.1f} [ {HShS2X/HShCLOCK*1.0e6:%9.1f} ]
hS2Y     = {HShS2Y:%15.1f} [ {HShS2Y/HShCLOCK*1.0e6:%9.1f} ]
hS1      = {HShS1:%15.1f} [ {HShS1/HShCLOCK*1.0e6:%9.1f} ]
hS2      = {HShS2:%15.1f} [ {HShS2/HShCLOCK*1.0e6:%9.1f} ]
hSTOF    = {HShSTOF:%15.1f} [ {HShSTOF/HShCLOCK*1.0e6:%9.1f} ]
hSCIN    = {HShSCIN:%15.1f} [ {HShSCIN/HShCLOCK*1.0e6:%9.1f} ]
hPRHI    = {HShPRHI:%15.1f} [ {HShPRHI/HShCLOCK*1.0e6:%9.1f} ]
hPRLO    = {HShPRLO:%15.1f} [ {HShPRLO/HShCLOCK*1.0e6:%9.1f} ]
hSHLO    = {HShSHLO:%15.1f} [ {HShSHLO/HShCLOCK*1.0e6:%9.1f} ]
hCER     = {HShCER:%15.1f} [ {HShCER/HShCLOCK*1.0e6:%9.1f} ]
hELHI    = {HShELHI:%15.1f} [ {HShELHI/HShCLOCK*1.0e6:%9.1f} ]
hELLO    = {HShELLO:%15.1f} [ {HShELLO/HShCLOCK*1.0e6:%9.1f} ]
hPION    = {HShPION:%15.1f} [ {HShPION/HShCLOCK*1.0e6:%9.1f} ]
hPIPRE   = {HShPIPRE:%15.1f} [ {HShPIPRE/HShCLOCK*1.0e6:%9.1f} ]
hELREAL  = {HShELREAL:%15.1f} [ {HShELREAL/HShCLOCK*1.0e6:%9.1f} ]
hELCLEAN = {HShELCLEAN:%15.1f} [ {HShELCLEAN/HShCLOCK*1.0e6:%9.1f} ]
hPRETRG  = {HShPRETRG:%15.1f} [ {HShPRETRG/HShCLOCK*1.0e6:%9.1f} ]
hPIONHI  = {HShPIONHI:%15.1f} [ {HShPIONHI/HShCLOCK*1.0e6:%9.1f} ]
hCERHI   = {HShCERHI:%15.1f} [ {HShCERHI/HShCLOCK*1.0e6:%9.1f} ]
HMSPRE   = {HSHMSPRE:%15.1f} [ {HSHMSPRE/HShCLOCK*1.0e6:%9.1f} ]
HMSTRG   = {HSHMSTRG:%15.1f} [ {HSHMSTRG/HShCLOCK*1.0e6:%9.1f} ]
hADCGATES= {HShADCGATES:%15.1f} [ {HShADCGATES/HShCLOCK*1.0e6:%9.1f} ]
hPRE50   = {HShPRE50:%15.1f} [ {HShPRE50/HShCLOCK*1.0e6:%9.1f} ]
hPRE100  = {HShPRE100:%15.1f} [ {HShPRE100/HShCLOCK*1.0e6:%9.1f} ]
hPRE150  = {HShPRE150:%15.1f} [ {HShPRE150/HShCLOCK*1.0e6:%9.1f} ]
hPRE200  = {HShPRE200:%15.1f} [ {HShPRE200/HShCLOCK*1.0e6:%9.1f} ]
UNSER    = {HShUNSER:%15.1f} [ {HShUNSER/HShCLOCK*1.0e6:%9.1f} ]
BCM1     = {HShBCM1:%15.1f} [ {HShBCM1/HShCLOCK*1.0e6:%9.1f} ]
BCM2     = {HShBCM2:%15.1f} [ {HShBCM2/HShCLOCK*1.0e6:%9.1f} ]
CLOCK    = {HShCLOCK:%15.1f} [ {HShCLOCK/HShCLOCK*1.0e6:%9.1f} ]
BEAMGATES= {HShBEAMGATES:%15.1f} [ {HShBEAMGATES/HShCLOCK*1.0e6:%9.1f} ]

hcomp L.T= {100*(HSHMSTRG/(HSHMSPRE+.0001)):%9.2f} %
helec.D.T= {100*(60/50)*(HShPRE100-HShPRE150)/(HShPRE100+.0001):%9.2f} %

sS1X     = {HSsS1X:%15.1f} [ {HSsS1X/HSsCLOCK*1.0e6:%9.1f} ]
sS1Y     = {HSsS1Y:%15.1f} [ {HSsS1Y/HSsCLOCK*1.0e6:%9.1f} ]
sS2X     = {HSsS2X:%15.1f} [ {HSsS2X/HSsCLOCK*1.0e6:%9.1f} ]
sS2Y     = {HSsS2Y:%15.1f} [ {HSsS2Y/HSsCLOCK*1.0e6:%9.1f} ]
sS1      = {HSsS1:%15.1f} [ {HSsS1/HSsCLOCK*1.0e6:%9.1f} ]
sS2      = {HSsS2:%15.1f} [ {HSsS2/HSsCLOCK*1.0e6:%9.1f} ]
sSTOF    = {HSsSTOF:%15.1f} [ {HSsSTOF/HSsCLOCK*1.0e6:%9.1f} ]
sSCIN    = {HSsSCIN:%15.1f} [ {HSsSCIN/HSsCLOCK*1.0e6:%9.1f} ]
sPRHI    = {HSsPRHI:%15.1f} [ {HSsPRHI/HSsCLOCK*1.0e6:%9.1f} ]
sPRLO    = {HSsPRLO:%15.1f} [ {HSsPRLO/HSsCLOCK*1.0e6:%9.1f} ]
sSHLO    = {HSsSHLO:%15.1f} [ {HSsSHLO/HSsCLOCK*1.0e6:%9.1f} ]
sCER     = {HSsCER:%15.1f} [ {HSsCER/HSsCLOCK*1.0e6:%9.1f} ]
sELHI    = {HSsELHI:%15.1f} [ {HSsELHI/HSsCLOCK*1.0e6:%9.1f} ]
sELLO    = {HSsELLO:%15.1f} [ {HSsELLO/HSsCLOCK*1.0e6:%9.1f} ]
sPION    = {HSsPION:%15.1f} [ {HSsPION/HSsCLOCK*1.0e6:%9.1f} ]
sPIPRE   = {HSsPIPRE:%15.1f} [ {HSsPIPRE/HSsCLOCK*1.0e6:%9.1f} ]
sELREAL  = {HSsELREAL:%15.1f} [ {HSsELREAL/HSsCLOCK*1.0e6:%9.1f} ]
sELCLEAN = {HSsELCLEAN:%15.1f} [ {HSsELCLEAN/HSsCLOCK*1.0e6:%9.1f} ]
sPRETRG  = {HSsPRETRG:%15.1f} [ {HSsPRETRG/HSsCLOCK*1.0e6:%9.1f} ]
SOSPRE   = {HSSOSPRE:%15.1f} [ {HSSOSPRE/HSsCLOCK*1.0e6:%9.1f} ]
SOSTRG   = {HSSOSTRG:%15.1f} [ {HSSOSTRG/HSsCLOCK*1.0e6:%9.1f} ]
sADCGATES= {HSsADCGATES:%15.1f} [ {HSsADCGATES/HSsCLOCK*1.0e6:%9.1f} ]
sPRE50   = {HSsPRE50:%15.1f} [ {HSsPRE150/HSsCLOCK*1.0e6:%9.1f} ]
sPRE100  = {HSsPRE100:%15.1f} [ {HSsPRE100/HSsCLOCK*1.0e6:%9.1f} ]
sPRE150  = {HSsPRE150:%15.1f} [ {HSsPRE150/HSsCLOCK*1.0e6:%9.1f} ]
sPRE200  = {HSsPRE200:%15.1f} [ {HSsPRE200/HSsCLOCK*1.0e6:%9.1f} ]
BCM1     = {HSsBCM1:%15.1f} [ {HSsBCM1/HSsCLOCK*1.0e6:%9.1f} ]
BCM2     = {HSsBCM2:%15.1f} [ {HSsBCM2/HSsCLOCK*1.0e6:%9.1f} ]
CLOCK    = {HSsCLOCK:%15.1f} [ {HSsCLOCK/HSsCLOCK*1.0e6:%9.1f} ]

scomp D.T= {100*(HSSOSTRG/(HSSOSPRE+.0001)):%9.2f} %
selec.D.T= {100*(60/50)*(HSsPRE100-HSsPRE150)/(HSsPRE100+.0001):%9.2f} %

COINPRE  = {HSCOINPRE:%15.1f} [ {HSCOINPRE/HSsCLOCK*1.0e6:%9.1f} ]
PEDPRE   = {HSPEDPRE:%15.1f} [ {HSPEDPRE/HSsCLOCK*1.0e6:%9.1f} ]
COINTRG  = {HSCOINTRG:%15.1f} [ {HSCOINTRG/HSsCLOCK*1.0e6:%9.1f} ]
PEDTRG   = {HSPEDTRG:%15.1f} [ {HSPEDTRG/HSsCLOCK*1.0e6:%9.1f} ]

***************************
*OTHER SCALER INFORMATION *
***************************

all adcgates= {HShBEAMGATES:%8d} [ {HShBEAMGATES/HSsCLOCK*1.0e6:%7.1f} ]
hms adcgates= {HShADCGATES:%8d} [ {HShADCGATES/HSsCLOCK*1.0e6:%7.1f} ]
sos adcgates= {HSsADCGATES:%8d} [ {HSsADCGATES/HSsCLOCK*1.0e6:%7.1f} ]
==> coin adc= {(HShADCGATES+HSsADCGATES-HShBEAMGATES):%8d} [ {(HShADCGATES+HSsADCGATES-HShBEAMGATES)/HSsCLOCK*1.0e6:%7.1f} ]

hPRE      = {HSHMSPRE:%15.1f} [ {HSHMSPRE/HSsCLOCK*1.0e6:%7.1f} ]
hPRE2     = {HSSHODO9:%15.1f} [ {HSSHODO9/HSsCLOCK*1.0e6:%7.1f} ] (from SOS scaler)
hPRE3     = {HShPRETRG:%15.1f} [ {HShPRETRG/HSsCLOCK*1.0e6:%7.1f} ] (HShPRETRG)
hTRG      = {HSHMSTRG:%15.1f} [ {HSHMSTRG/HSsCLOCK*1.0e6:%7.1f} ]
hTRG2     = {HSSHODO13:%15.1f} [ {HSSHODO13/HSsCLOCK*1.0e6:%7.1f} ] (from SOS scaler)

aadc-sadc = {(HShBEAMGATES-HSsADCGATES):%15.1f} [ {(HShBEAMGATES-HSsADCGATES)/HSsCLOCK*1.0e6:%7.1f} ]

*hcomputer D.T. = {100*(1-HSHMSTRG/(HSHMSPRE+.0001)):%9.2f} % ( {100*(1-HSSHODO13/(HSSHODO9+.0001)):%6.2f} % from SOS scaler)
*helect.  D.T.  = {100*(60/50)*(HShPRE100-HShPRE150)/(HShPRE100+.0001):%9.2f} %
 PS1(calc)      = {((HSHMSTRG-HSCOINTRG)/(HShBEAMGATES-HSsADCGATES+.00001)):%9.1f}

sPSR      = {HSSOSPRE:%15.1f} [ {HSSOSPRE/HSsCLOCK*1.0e6:%7.1f} ]
sPSR2     = {HShUNUSED4:%15.1f} [ {HShUNUSED4/HSsCLOCK*1.0e6:%7.1f} ] (from HMS scaler)
sTRG      = {HSSOSTRG:%15.1f} [ {HSSOSTRG/HSsCLOCK*1.0e6:%7.1f} ]
sTRG2     = {HShUNUSED5:%15.1f} [ {HShUNUSED5/HSsCLOCK*1.0e6:%7.1f} ] (from HMS scaler)

aadc-hadc = {(HShBEAMGATES-HShADCGATES):%15.1f} [ {(HShBEAMGATES-HShADCGATES)/HSsCLOCK*1.0e6:%7.1f} ]

*scomputer D.T. = {100*(1-HSSOSTRG/(HSSOSPRE+.0001)):%9.2f} % ( {100*(1-HShUNUSED5/(HShUNUSED4+.0001)):%9.2f} % from HMS scaler)
*select    D.T. = {100*(60/50)*(HSsPRE100-HSsPRE150)/(HSsPRE100+.0001):%9.2f} %
 PS2(calc)      = {((HSSOSTRG-HSSHODO15)/(HShBEAMGATES-HShADCGATES+.00001)):%9.1f}

cPRE       = {HSCOINPRE:%15.1f} [ {HSCOINPRE/HSsCLOCK*1.0e6:%7.1f} ]
cPRE2      = {HSSHODO11:%15.1f} [ {HSSHODO11/HSsCLOCK*1.0e6:%7.1f} ] (from SOS scaler)
cTRG       = {HSCOINTRG:%15.1f} [ {HSCOINTRG/HSsCLOCK*1.0e6:%7.1f} ]
cTRG2      = {HSSHODO15:%15.1f} [ {HSSHODO15/HSsCLOCK*1.0e6:%7.1f} ] (from SOS scaler)

hms coin  D.T. = {100*(1-HSCOINTRG/(HSCOINPRE+.0001)):%9.2f} %
sos coin  D.T. = {100*(1-HSSHODO15/(HSSHODO11+.0001)):%9.2f} %
NEW coin  D.T. = {100*(1-HShPRE200/(HShPIONHI+.0001)):%9.2f} %

**********
*SUMMARY *
**********
Time of run        = {HShCLOCK/1.0e6:%8.2f} sec.

hdc1 6/6 eff = {(hdc_cham_hits[0]/hmsCham1Hits.npassed):%5.3f}  BAD = 0.99
hdc2 6/6 eff = {(hdc_cham_hits[1]/hmsCham1Hits.npassed):%5.3f}  BAD = 0.99
anyhs1x  eff = {anyhs1x.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .99
anyhs1y  eff = {anyhs1y.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .99
anyhs2x  eff = {anyhs2x.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .99
anyhs2y  eff = {anyhs2y.npassed/(hmscoin_event.npassed+.0001):%5.3f}  BAD = .99


         I_avg           Q_tot             Q_tot
      (microAmps)   (microCoulombs)   (microAmp-hours)
BCM1 
BCM2 
BCM3 

hpretriggers  = 
htriggers     = 
hadcgates     = 
Computer D.T. = 
Elec. D.T.    = 

**************************
* Hodoscope Efficiencies *
**************************
Efficiencies for hodoscopes is the fraction of times scin. was hit when track
with chisquared/dof < {hstat_maxchisq:%5.1f} came within {hstat_slop:%4.1f} cm of the center.

Events examined = htrig       = {hmscoin_event.npassed:%7d}
Tracks found    = hcleantrack = {hCleanTrack.npassed:%7d}
Tracks passing chisquared cut = {HstatNumevents.npassed:%7d}

Scint  POS eff NEG eff  OR eff AND eff   Hits
-----  ------- ------- ------- -------   ----
hS1X1:  {(hhodo_pos_eff[0]/hhodo_gold_hits[0]):%6.3f}  {(hhodo_neg_eff[0]/hhodo_gold_hits[0]):%6.3f}  {(hhodo_or_eff[0]/hhodo_gold_hits[0]):%6.3f}  {(hhodo_and_eff[0]/hhodo_gold_hits[0]):%6.3f} {hhodo_gold_hits[0]:%6d}
hS1X2:  {(hhodo_pos_eff[4]/hhodo_gold_hits[4]):%6.3f}  {(hhodo_neg_eff[4]/hhodo_gold_hits[4]):%6.3f}  {(hhodo_or_eff[4]/hhodo_gold_hits[4]):%6.3f}  {(hhodo_and_eff[4]/hhodo_gold_hits[4]):%6.3f} {hhodo_gold_hits[4]:%6d}
hS1X3:  {(hhodo_pos_eff[8]/hhodo_gold_hits[8]):%6.3f}  {(hhodo_neg_eff[8]/hhodo_gold_hits[8]):%6.3f}  {(hhodo_or_eff[8]/hhodo_gold_hits[8]):%6.3f}  {(hhodo_and_eff[8]/hhodo_gold_hits[8]):%6.3f} {hhodo_gold_hits[8]:%6d}
hS1X4:  {(hhodo_pos_eff[12]/hhodo_gold_hits[12]):%6.3f}  {(hhodo_neg_eff[12]/hhodo_gold_hits[12]):%6.3f}  {(hhodo_or_eff[12]/hhodo_gold_hits[12]):%6.3f}  {(hhodo_and_eff[12]/hhodo_gold_hits[12]):%6.3f} {hhodo_gold_hits[12]:%6d}
hS1X5:  {(hhodo_pos_eff[16]/hhodo_gold_hits[16]):%6.3f}  {(hhodo_neg_eff[16]/hhodo_gold_hits[16]):%6.3f}  {(hhodo_or_eff[16]/hhodo_gold_hits[16]):%6.3f}  {(hhodo_and_eff[16]/hhodo_gold_hits[16]):%6.3f} {hhodo_gold_hits[16]:%6d}
hS1X6:  {(hhodo_pos_eff[20]/hhodo_gold_hits[20]):%6.3f}  {(hhodo_neg_eff[20]/hhodo_gold_hits[20]):%6.3f}  {(hhodo_or_eff[20]/hhodo_gold_hits[20]):%6.3f}  {(hhodo_and_eff[20]/hhodo_gold_hits[20]):%6.3f} {hhodo_gold_hits[20]:%6d}
hS1X7:  {(hhodo_pos_eff[24]/hhodo_gold_hits[24]):%6.3f}  {(hhodo_neg_eff[24]/hhodo_gold_hits[24]):%6.3f}  {(hhodo_or_eff[24]/hhodo_gold_hits[24]):%6.3f}  {(hhodo_and_eff[24]/hhodo_gold_hits[24]):%6.3f} {hhodo_gold_hits[24]:%6d}
hS1X8:  {(hhodo_pos_eff[28]/hhodo_gold_hits[28]):%6.3f}  {(hhodo_neg_eff[28]/hhodo_gold_hits[28]):%6.3f}  {(hhodo_or_eff[28]/hhodo_gold_hits[28]):%6.3f}  {(hhodo_and_eff[28]/hhodo_gold_hits[28]):%6.3f} {hhodo_gold_hits[28]:%6d}
hS1X9:  {(hhodo_pos_eff[32]/hhodo_gold_hits[32]):%6.3f}  {(hhodo_neg_eff[32]/hhodo_gold_hits[32]):%6.3f}  {(hhodo_or_eff[32]/hhodo_gold_hits[32]):%6.3f}  {(hhodo_and_eff[32]/hhodo_gold_hits[32]):%6.3f} {hhodo_gold_hits[32]:%6d}
hS1X10: {(hhodo_pos_eff[36]/hhodo_gold_hits[36]):%6.3f}  {(hhodo_neg_eff[36]/hhodo_gold_hits[36]):%6.3f}  {(hhodo_or_eff[36]/hhodo_gold_hits[36]):%6.3f}  {(hhodo_and_eff[36]/hhodo_gold_hits[36]):%6.3f} {hhodo_gold_hits[36]:%6d}
hS1X11: {(hhodo_pos_eff[40]/hhodo_gold_hits[40]):%6.3f}  {(hhodo_neg_eff[40]/hhodo_gold_hits[40]):%6.3f}  {(hhodo_or_eff[40]/hhodo_gold_hits[40]):%6.3f}  {(hhodo_and_eff[40]/hhodo_gold_hits[40]):%6.3f} {hhodo_gold_hits[40]:%6d}
hS1X12: {(hhodo_pos_eff[44]/hhodo_gold_hits[44]):%6.3f}  {(hhodo_neg_eff[44]/hhodo_gold_hits[44]):%6.3f}  {(hhodo_or_eff[44]/hhodo_gold_hits[44]):%6.3f}  {(hhodo_and_eff[44]/hhodo_gold_hits[44]):%6.3f} {hhodo_gold_hits[44]:%6d}
hS1X13: {(hhodo_pos_eff[48]/hhodo_gold_hits[48]):%6.3f}  {(hhodo_neg_eff[48]/hhodo_gold_hits[48]):%6.3f}  {(hhodo_or_eff[48]/hhodo_gold_hits[48]):%6.3f}  {(hhodo_and_eff[48]/hhodo_gold_hits[48]):%6.3f} {hhodo_gold_hits[48]:%6d}
hS1X14: {(hhodo_pos_eff[52]/hhodo_gold_hits[52]):%6.3f}  {(hhodo_neg_eff[52]/hhodo_gold_hits[52]):%6.3f}  {(hhodo_or_eff[52]/hhodo_gold_hits[52]):%6.3f}  {(hhodo_and_eff[52]/hhodo_gold_hits[52]):%6.3f} {hhodo_gold_hits[52]:%6d}
hS1X15: {(hhodo_pos_eff[56]/hhodo_gold_hits[56]):%6.3f}  {(hhodo_neg_eff[56]/hhodo_gold_hits[56]):%6.3f}  {(hhodo_or_eff[56]/hhodo_gold_hits[56]):%6.3f}  {(hhodo_and_eff[56]/hhodo_gold_hits[56]):%6.3f} {hhodo_gold_hits[56]:%6d}
hS1X16: {(hhodo_pos_eff[60]/hhodo_gold_hits[60]):%6.3f}  {(hhodo_neg_eff[60]/hhodo_gold_hits[60]):%6.3f}  {(hhodo_or_eff[60]/hhodo_gold_hits[60]):%6.3f}  {(hhodo_and_eff[60]/hhodo_gold_hits[60]):%6.3f} {hhodo_gold_hits[60]:%6d}

hS1Y1:  {(hhodo_pos_eff[1]/hhodo_gold_hits[1]):%6.3f}  {(hhodo_neg_eff[1]/hhodo_gold_hits[1]):%6.3f}  {(hhodo_or_eff[1]/hhodo_gold_hits[1]):%6.3f}  {(hhodo_and_eff[1]/hhodo_gold_hits[1]):%6.3f} {hhodo_gold_hits[1]:%6d}
hS1Y2:  {(hhodo_pos_eff[5]/hhodo_gold_hits[5]):%6.3f}  {(hhodo_neg_eff[5]/hhodo_gold_hits[5]):%6.3f}  {(hhodo_or_eff[5]/hhodo_gold_hits[5]):%6.3f}  {(hhodo_and_eff[5]/hhodo_gold_hits[5]):%6.3f} {hhodo_gold_hits[5]:%6d}
hS1Y3:  {(hhodo_pos_eff[9]/hhodo_gold_hits[9]):%6.3f}  {(hhodo_neg_eff[9]/hhodo_gold_hits[9]):%6.3f}  {(hhodo_or_eff[9]/hhodo_gold_hits[9]):%6.3f}  {(hhodo_and_eff[9]/hhodo_gold_hits[9]):%6.3f} {hhodo_gold_hits[9]:%6d}
hS1Y4:  {(hhodo_pos_eff[13]/hhodo_gold_hits[13]):%6.3f}  {(hhodo_neg_eff[13]/hhodo_gold_hits[13]):%6.3f}  {(hhodo_or_eff[13]/hhodo_gold_hits[13]):%6.3f}  {(hhodo_and_eff[13]/hhodo_gold_hits[13]):%6.3f} {hhodo_gold_hits[13]:%6d}
hS1Y5:  {(hhodo_pos_eff[17]/hhodo_gold_hits[17]):%6.3f}  {(hhodo_neg_eff[17]/hhodo_gold_hits[17]):%6.3f}  {(hhodo_or_eff[17]/hhodo_gold_hits[17]):%6.3f}  {(hhodo_and_eff[17]/hhodo_gold_hits[17]):%6.3f} {hhodo_gold_hits[17]:%6d}
hS1Y6:  {(hhodo_pos_eff[21]/hhodo_gold_hits[21]):%6.3f}  {(hhodo_neg_eff[21]/hhodo_gold_hits[21]):%6.3f}  {(hhodo_or_eff[21]/hhodo_gold_hits[21]):%6.3f}  {(hhodo_and_eff[21]/hhodo_gold_hits[21]):%6.3f} {hhodo_gold_hits[21]:%6d}
hS1Y7:  {(hhodo_pos_eff[25]/hhodo_gold_hits[25]):%6.3f}  {(hhodo_neg_eff[25]/hhodo_gold_hits[25]):%6.3f}  {(hhodo_or_eff[25]/hhodo_gold_hits[25]):%6.3f}  {(hhodo_and_eff[25]/hhodo_gold_hits[25]):%6.3f} {hhodo_gold_hits[25]:%6d}
hS1Y8:  {(hhodo_pos_eff[29]/hhodo_gold_hits[29]):%6.3f}  {(hhodo_neg_eff[29]/hhodo_gold_hits[29]):%6.3f}  {(hhodo_or_eff[29]/hhodo_gold_hits[29]):%6.3f}  {(hhodo_and_eff[29]/hhodo_gold_hits[29]):%6.3f} {hhodo_gold_hits[29]:%6d}
hS1Y9:  {(hhodo_pos_eff[33]/hhodo_gold_hits[33]):%6.3f}  {(hhodo_neg_eff[33]/hhodo_gold_hits[33]):%6.3f}  {(hhodo_or_eff[33]/hhodo_gold_hits[33]):%6.3f}  {(hhodo_and_eff[33]/hhodo_gold_hits[33]):%6.3f} {hhodo_gold_hits[33]:%6d}
hS1Y10: {(hhodo_pos_eff[37]/hhodo_gold_hits[37]):%6.3f}  {(hhodo_neg_eff[37]/hhodo_gold_hits[37]):%6.3f}  {(hhodo_or_eff[37]/hhodo_gold_hits[37]):%6.3f}  {(hhodo_and_eff[37]/hhodo_gold_hits[37]):%6.3f} {hhodo_gold_hits[37]:%6d}

hS2X1:  {(hhodo_pos_eff[2]/hhodo_gold_hits[2]):%6.3f}  {(hhodo_neg_eff[2]/hhodo_gold_hits[2]):%6.3f}  {(hhodo_or_eff[2]/hhodo_gold_hits[2]):%6.3f}  {(hhodo_and_eff[2]/hhodo_gold_hits[2]):%6.3f} {hhodo_gold_hits[2]:%6d}
hS2X2:  {(hhodo_pos_eff[6]/hhodo_gold_hits[6]):%6.3f}  {(hhodo_neg_eff[6]/hhodo_gold_hits[6]):%6.3f}  {(hhodo_or_eff[6]/hhodo_gold_hits[6]):%6.3f}  {(hhodo_and_eff[6]/hhodo_gold_hits[6]):%6.3f} {hhodo_gold_hits[6]:%6d}
hS2X3:  {(hhodo_pos_eff[10]/hhodo_gold_hits[10]):%6.3f}  {(hhodo_neg_eff[10]/hhodo_gold_hits[10]):%6.3f}  {(hhodo_or_eff[10]/hhodo_gold_hits[10]):%6.3f}  {(hhodo_and_eff[10]/hhodo_gold_hits[10]):%6.3f} {hhodo_gold_hits[10]:%6d}
hS2X4:  {(hhodo_pos_eff[14]/hhodo_gold_hits[14]):%6.3f}  {(hhodo_neg_eff[14]/hhodo_gold_hits[14]):%6.3f}  {(hhodo_or_eff[14]/hhodo_gold_hits[14]):%6.3f}  {(hhodo_and_eff[14]/hhodo_gold_hits[14]):%6.3f} {hhodo_gold_hits[14]:%6d}
hS2X5:  {(hhodo_pos_eff[18]/hhodo_gold_hits[18]):%6.3f}  {(hhodo_neg_eff[18]/hhodo_gold_hits[18]):%6.3f}  {(hhodo_or_eff[18]/hhodo_gold_hits[18]):%6.3f}  {(hhodo_and_eff[18]/hhodo_gold_hits[18]):%6.3f} {hhodo_gold_hits[18]:%6d}
hS2X6:  {(hhodo_pos_eff[22]/hhodo_gold_hits[22]):%6.3f}  {(hhodo_neg_eff[22]/hhodo_gold_hits[22]):%6.3f}  {(hhodo_or_eff[22]/hhodo_gold_hits[22]):%6.3f}  {(hhodo_and_eff[22]/hhodo_gold_hits[22]):%6.3f} {hhodo_gold_hits[22]:%6d}
hS2X7:  {(hhodo_pos_eff[26]/hhodo_gold_hits[26]):%6.3f}  {(hhodo_neg_eff[26]/hhodo_gold_hits[26]):%6.3f}  {(hhodo_or_eff[26]/hhodo_gold_hits[26]):%6.3f}  {(hhodo_and_eff[26]/hhodo_gold_hits[26]):%6.3f} {hhodo_gold_hits[26]:%6d}
hS2X8:  {(hhodo_pos_eff[30]/hhodo_gold_hits[30]):%6.3f}  {(hhodo_neg_eff[30]/hhodo_gold_hits[30]):%6.3f}  {(hhodo_or_eff[30]/hhodo_gold_hits[30]):%6.3f}  {(hhodo_and_eff[30]/hhodo_gold_hits[30]):%6.3f} {hhodo_gold_hits[30]:%6d}
hS2X9:  {(hhodo_pos_eff[34]/hhodo_gold_hits[34]):%6.3f}  {(hhodo_neg_eff[34]/hhodo_gold_hits[34]):%6.3f}  {(hhodo_or_eff[34]/hhodo_gold_hits[34]):%6.3f}  {(hhodo_and_eff[34]/hhodo_gold_hits[34]):%6.3f} {hhodo_gold_hits[34]:%6d}
hS2X10: {(hhodo_pos_eff[38]/hhodo_gold_hits[38]):%6.3f}  {(hhodo_neg_eff[38]/hhodo_gold_hits[38]):%6.3f}  {(hhodo_or_eff[38]/hhodo_gold_hits[38]):%6.3f}  {(hhodo_and_eff[38]/hhodo_gold_hits[38]):%6.3f} {hhodo_gold_hits[38]:%6d}
hS2X11: {(hhodo_pos_eff[42]/hhodo_gold_hits[42]):%6.3f}  {(hhodo_neg_eff[42]/hhodo_gold_hits[42]):%6.3f}  {(hhodo_or_eff[42]/hhodo_gold_hits[42]):%6.3f}  {(hhodo_and_eff[42]/hhodo_gold_hits[42]):%6.3f} {hhodo_gold_hits[42]:%6d}
hS2X12: {(hhodo_pos_eff[46]/hhodo_gold_hits[46]):%6.3f}  {(hhodo_neg_eff[46]/hhodo_gold_hits[46]):%6.3f}  {(hhodo_or_eff[46]/hhodo_gold_hits[46]):%6.3f}  {(hhodo_and_eff[46]/hhodo_gold_hits[46]):%6.3f} {hhodo_gold_hits[46]:%6d}
hS2X13: {(hhodo_pos_eff[50]/hhodo_gold_hits[50]):%6.3f}  {(hhodo_neg_eff[50]/hhodo_gold_hits[50]):%6.3f}  {(hhodo_or_eff[50]/hhodo_gold_hits[50]):%6.3f}  {(hhodo_and_eff[50]/hhodo_gold_hits[50]):%6.3f} {hhodo_gold_hits[50]:%6d}
hS2X14: {(hhodo_pos_eff[54]/hhodo_gold_hits[54]):%6.3f}  {(hhodo_neg_eff[54]/hhodo_gold_hits[54]):%6.3f}  {(hhodo_or_eff[54]/hhodo_gold_hits[54]):%6.3f}  {(hhodo_and_eff[54]/hhodo_gold_hits[54]):%6.3f} {hhodo_gold_hits[54]:%6d}
hS2X15: {(hhodo_pos_eff[58]/hhodo_gold_hits[58]):%6.3f}  {(hhodo_neg_eff[58]/hhodo_gold_hits[58]):%6.3f}  {(hhodo_or_eff[58]/hhodo_gold_hits[58]):%6.3f}  {(hhodo_and_eff[58]/hhodo_gold_hits[58]):%6.3f} {hhodo_gold_hits[58]:%6d}
hS2X16: {(hhodo_pos_eff[62]/hhodo_gold_hits[62]):%6.3f}  {(hhodo_neg_eff[62]/hhodo_gold_hits[62]):%6.3f}  {(hhodo_or_eff[62]/hhodo_gold_hits[62]):%6.3f}  {(hhodo_and_eff[62]/hhodo_gold_hits[62]):%6.3f} {hhodo_gold_hits[62]:%6d}

hS2Y1:  {(hhodo_pos_eff[3]/hhodo_gold_hits[3]):%6.3f}  {(hhodo_neg_eff[3]/hhodo_gold_hits[3]):%6.3f}  {(hhodo_or_eff[3]/hhodo_gold_hits[3]):%6.3f}  {(hhodo_and_eff[3]/hhodo_gold_hits[3]):%6.3f} {hhodo_gold_hits[3]:%6d}
hS2Y2:  {(hhodo_pos_eff[7]/hhodo_gold_hits[7]):%6.3f}  {(hhodo_neg_eff[7]/hhodo_gold_hits[7]):%6.3f}  {(hhodo_or_eff[7]/hhodo_gold_hits[7]):%6.3f}  {(hhodo_and_eff[7]/hhodo_gold_hits[7]):%6.3f} {hhodo_gold_hits[7]:%6d}
hS2Y3:  {(hhodo_pos_eff[11]/hhodo_gold_hits[11]):%6.3f}  {(hhodo_neg_eff[11]/hhodo_gold_hits[11]):%6.3f}  {(hhodo_or_eff[11]/hhodo_gold_hits[11]):%6.3f}  {(hhodo_and_eff[11]/hhodo_gold_hits[11]):%6.3f} {hhodo_gold_hits[11]:%6d}
hS2Y4:  {(hhodo_pos_eff[15]/hhodo_gold_hits[15]):%6.3f}  {(hhodo_neg_eff[15]/hhodo_gold_hits[15]):%6.3f}  {(hhodo_or_eff[15]/hhodo_gold_hits[15]):%6.3f}  {(hhodo_and_eff[15]/hhodo_gold_hits[15]):%6.3f} {hhodo_gold_hits[15]:%6d}
hS2Y5:  {(hhodo_pos_eff[19]/hhodo_gold_hits[19]):%6.3f}  {(hhodo_neg_eff[19]/hhodo_gold_hits[19]):%6.3f}  {(hhodo_or_eff[19]/hhodo_gold_hits[19]):%6.3f}  {(hhodo_and_eff[19]/hhodo_gold_hits[19]):%6.3f} {hhodo_gold_hits[19]:%6d}
hS2Y6:  {(hhodo_pos_eff[23]/hhodo_gold_hits[23]):%6.3f}  {(hhodo_neg_eff[23]/hhodo_gold_hits[23]):%6.3f}  {(hhodo_or_eff[23]/hhodo_gold_hits[23]):%6.3f}  {(hhodo_and_eff[23]/hhodo_gold_hits[23]):%6.3f} {hhodo_gold_hits[23]:%6d}
hS2Y7:  {(hhodo_pos_eff[27]/hhodo_gold_hits[27]):%6.3f}  {(hhodo_neg_eff[27]/hhodo_gold_hits[27]):%6.3f}  {(hhodo_or_eff[27]/hhodo_gold_hits[27]):%6.3f}  {(hhodo_and_eff[27]/hhodo_gold_hits[27]):%6.3f} {hhodo_gold_hits[27]:%6d}
hS2Y8:  {(hhodo_pos_eff[31]/hhodo_gold_hits[31]):%6.3f}  {(hhodo_neg_eff[31]/hhodo_gold_hits[31]):%6.3f}  {(hhodo_or_eff[31]/hhodo_gold_hits[31]):%6.3f}  {(hhodo_and_eff[31]/hhodo_gold_hits[31]):%6.3f} {hhodo_gold_hits[31]:%6d}
hS2Y9:  {(hhodo_pos_eff[35]/hhodo_gold_hits[35]):%6.3f}  {(hhodo_neg_eff[35]/hhodo_gold_hits[35]):%6.3f}  {(hhodo_or_eff[35]/hhodo_gold_hits[35]):%6.3f}  {(hhodo_and_eff[35]/hhodo_gold_hits[35]):%6.3f} {hhodo_gold_hits[35]:%6d}
hS2Y10: {(hhodo_pos_eff[39]/hhodo_gold_hits[39]):%6.3f}  {(hhodo_neg_eff[39]/hhodo_gold_hits[39]):%6.3f}  {(hhodo_or_eff[39]/hhodo_gold_hits[39]):%6.3f}  {(hhodo_and_eff[39]/hhodo_gold_hits[39]):%6.3f} {hhodo_gold_hits[39]:%6d}


*************************
* Cerenkov Efficiencies *
*************************
Good Track Requirements:
   1. Only one track found in the focal plane
   2. chisq/dof <  {hcer_chi2max:%6.2f}
   3. {hcer_beta_min:%6.2f} < beta < {hcer_beta_max:%6.2f}
   4. {hcer_et_min:%6.2f} < calorimeter energy < {hcer_et_max:%6.2f}
Threshold set at  {hcer_threshold:%6.2f}

Mirror efficiencies removed.  Not supported in latest THcAerogel

****************************
* Calorimeter Efficiencies *
****************************
Efficiencies for calorimeter is the fraction of times block was hit when track
with chisquared/dof < hstat_cal_maxchisq  which came within hstat_cal_slop cm of the center.
and hcer_npe_sum > 3.0 (hardwired).

Events examined = htrig       = 
Tracks found    = hcleantrack = 
Tracks passing chisquared cut = 

Block   eff    Hits
-----   ---    ----
hA1   
hA2   
hA3   
hA4   
hA5   
hA6   
hA7   
hA8   
hA9   
hA10  
hA11  
hA12  
hA13  

hB1   
hB2   
hB3   
hB4   
hB5   
hB6   
hB7   
hB8   
hB9   
hB10  
hB11  
hB12  
hB13  

hC1   
hC2   
hC3   
hC4   
hC5   
hC6   
hC7   
hC8   
hC9   
hC10  
hC11  
hC12  
hC13  

hD1   
hD2   
hD3   
hD4   
hD5   
hD6   
hD7   
hD8   
hD9   
hD10  
hD11  
hD12  
hD13  

hA    
hB    
hC    
hD    

***************
* ALL SCALERS *
***************

DA01: hS1X+
HS1XP1     = {HSHS1XP1:%15d}
HS1XP2     = {HSHS1XP2:%15d}
HS1XP3     = {HSHS1XP3:%15d}
HS1XP4     = {HSHS1XP4:%15d}
HS1XP5     = {HSHS1XP5:%15d}
HS1XP6     = {HSHS1XP6:%15d}
HS1XP7     = {HSHS1XP7:%15d}
HS1XP8     = {HSHS1XP8:%15d}
HS1XP9     = {HSHS1XP9:%15d}
HS1XP10    = {HSHS1XP10:%15d}
HS1XP11    = {HSHS1XP11:%15d}
HS1XP12    = {HSHS1XP12:%15d}
HS1XP13    = {HSHS1XP13:%15d}
HS1XP14    = {HSHS1XP14:%15d}
HS1XP15    = {HSHS1XP15:%15d}
HS1XP16    = {HSHS1XP16:%15d}

DA02: hS1X-
HS1XM1     = {HSHS1XM1:%15d}
HS1XM2     = {HSHS1XM2:%15d}
HS1XM3     = {HSHS1XM3:%15d}
HS1XM4     = {HSHS1XM4:%15d}
HS1XM5     = {HSHS1XM5:%15d}
HS1XM6     = {HSHS1XM6:%15d}
HS1XM7     = {HSHS1XM7:%15d}
HS1XM8     = {HSHS1XM8:%15d}
HS1XM9     = {HSHS1XM9:%15d}
HS1XM10    = {HSHS1XM10:%15d}
HS1XM11    = {HSHS1XM11:%15d}
HS1XM12    = {HSHS1XM12:%15d}
HS1XM13    = {HSHS1XM13:%15d}
HS1XM14    = {HSHS1XM14:%15d}
HS1XM15    = {HSHS1XM15:%15d}
HS1XM16    = {HSHS1XM16:%15d}

DA03: hS1Y+
HS1YP1     = {HSHS1YP1:%15d}
HS1YP2     = {HSHS1YP2:%15d}
HS1YP3     = {HSHS1YP3:%15d}
HS1YP4     = {HSHS1YP4:%15d}
HS1YP5     = {HSHS1YP5:%15d}
HS1YP6     = {HSHS1YP6:%15d}
HS1YP7     = {HSHS1YP7:%15d}
HS1YP8     = {HSHS1YP8:%15d}
HS1YP9     = {HSHS1YP9:%15d}
HS1YP10    = {HSHS1YP10:%15d}
HS1YP11    = {HSHS1YP11:%15d}
HS1YP12    = {HSHS1YP12:%15d}
HS1YP13    = {HSHS1YP13:%15d}
HS1YP14    = {HSHS1YP14:%15d}
HS1YP15    = {HSHS1YP15:%15d}
HS1YP16    = {HSHS1YP16:%15d}

DA04: hS1Y-
HS1YM1     = {HSHS1YM1:%15d}
HS1YM2     = {HSHS1YM2:%15d}
HS1YM3     = {HSHS1YM3:%15d}
HS1YM4     = {HSHS1YM4:%15d}
HS1YM5     = {HSHS1YM5:%15d}
HS1YM6     = {HSHS1YM6:%15d}
HS1YM7     = {HSHS1YM7:%15d}
HS1YM8     = {HSHS1YM8:%15d}
HS1YM9     = {HSHS1YM9:%15d}
HS1YM10    = {HSHS1YM10:%15d}
HS1YM11    = {HSHS1YM11:%15d}
HS1YM12    = {HSHS1YM12:%15d}
HS1YM13    = {HSHS1YM13:%15d}
HS1YM14    = {HSHS1YM14:%15d}
HS1YM15    = {HSHS1YM15:%15d}
HS1YM16    = {HSHS1YM16:%15d}

DA05: hS2X+
HS2XP1     = {HSHS2XP1:%15d}
HS2XP2     = {HSHS2XP2:%15d}
HS2XP3     = {HSHS2XP3:%15d}
HS2XP4     = {HSHS2XP4:%15d}
HS2XP5     = {HSHS2XP5:%15d}
HS2XP6     = {HSHS2XP6:%15d}
HS2XP7     = {HSHS2XP7:%15d}
HS2XP8     = {HSHS2XP8:%15d}
HS2XP9     = {HSHS2XP9:%15d}
HS2XP10    = {HSHS2XP10:%15d}
HS2XP11    = {HSHS2XP11:%15d}
HS2XP12    = {HSHS2XP12:%15d}
HS2XP13    = {HSHS2XP13:%15d}
HS2XP14    = {HSHS2XP14:%15d}
HS2XP15    = {HSHS2XP15:%15d}
HS2XP16    = {HSHS2XP16:%15d}

DA06: hS2X-
HS2XM1     = {HSHS2XM1:%15d}
HS2XM2     = {HSHS2XM2:%15d}
HS2XM3     = {HSHS2XM3:%15d}
HS2XM4     = {HSHS2XM4:%15d}
HS2XM5     = {HSHS2XM5:%15d}
HS2XM6     = {HSHS2XM6:%15d}
HS2XM7     = {HSHS2XM7:%15d}
HS2XM8     = {HSHS2XM8:%15d}
HS2XM9     = {HSHS2XM9:%15d}
HS2XM10    = {HSHS2XM10:%15d}
HS2XM11    = {HSHS2XM11:%15d}
HS2XM12    = {HSHS2XM12:%15d}
HS2XM13    = {HSHS2XM13:%15d}
HS2XM14    = {HSHS2XM14:%15d}
HS2XM15    = {HSHS2XM15:%15d}
HS2XM16    = {HSHS2XM16:%15d}

DA07: hS2Y+
HS2YP1     = {HSHS2YP1:%15d}
HS2YP2     = {HSHS2YP2:%15d}
HS2YP3     = {HSHS2YP3:%15d}
HS2YP4     = {HSHS2YP4:%15d}
HS2YP5     = {HSHS2YP5:%15d}
HS2YP6     = {HSHS2YP6:%15d}
HS2YP7     = {HSHS2YP7:%15d}
HS2YP8     = {HSHS2YP8:%15d}
HS2YP9     = {HSHS2YP9:%15d}
HS2YP10    = {HSHS2YP10:%15d}
HS2YP11    = {HSHS2YP11:%15d}
HS2YP12    = {HSHS2YP12:%15d}
HS2YP13    = {HSHS2YP13:%15d}
HS2YP14    = {HSHS2YP14:%15d}
HS2YP15    = {HSHS2YP15:%15d}
HS2YP16    = {HSHS2YP16:%15d}

DA08: hS2Y-
HS2YM1     = {HSHS2YM1:%15d}
HS2YM2     = {HSHS2YM2:%15d}
HS2YM3     = {HSHS2YM3:%15d}
HS2YM4     = {HSHS2YM4:%15d}
HS2YM5     = {HSHS2YM5:%15d}
HS2YM6     = {HSHS2YM6:%15d}
HS2YM7     = {HSHS2YM7:%15d}
HS2YM8     = {HSHS2YM8:%15d}
HS2YM9     = {HSHS2YM9:%15d}
HS2YM10    = {HSHS2YM10:%15d}
HS2YM11    = {HSHS2YM11:%15d}
HS2YM12    = {HSHS2YM12:%15d}
HS2YM13    = {HSHS2YM13:%15d}
HS2YM14    = {HSHS2YM14:%15d}
HS2YM15    = {HSHS2YM15:%15d}
HS2YM16    = {HSHS2YM16:%15d}

DA09: htrig1
S1         = {HSS1:%15d}
hPRE50     = {HShPRE50:%15d}
S2X        = {HSS2X:%15d}
hPRE150    = {HShPRE150:%15d}
S1X        = {HSS1X:%15d}
S2Y        = {HSS2Y:%15d}
hPRE100    = {HShPRE100:%15d}
S1Y        = {HSS1Y:%15d}
S2         = {HSS2:%15d}
hCERHI     = {HShCERHI:%15d}
hSTOF      = {HShSTOF:%15d}
hSCIN      = {HShSCIN:%15d}
hELREAL    = {HShELREAL:%15d}
hPIPRE     = {HShPIPRE:%15d}
hELCLEAN   = {HShELCLEAN:%15d}
hPRETRG    = {HShPRETRG:%15d}

DA0A: htrig2
hPION      = {HShPION:%15d}
hCER       = {HShCER:%15d}
hPIONHI    = {HShPIONHI:%15d}
hPRE200    = {HShPRE200:%15d}
hUNUSED1   = {HShUNUSED1:%15d}
hUNSER     = {HShUNSER:%15d}
hBCM1      = {HShBCM1:%15d}
hBCM2      = {HShBCM2:%15d}
hELHI      = {HShELHI:%15d}
hELLO      = {HShELLO:%15d}
hPRHI      = {HShPRHI:%15d}
hPRLO      = {HShPRLO:%15d}
hSHLO      = {HShSHLO:%15d}
hCLOCK     = {HShCLOCK:%15d}
hBEAMGATES = {HShBEAMGATES:%15d}
hADCGATES  = {HShADCGATES:%15d}

DA0B: hHODO
hS1X       = {HShS1X:%15d}
hS1Y       = {HShS1Y:%15d}
hS2X       = {HShS2X:%15d}
hS2Y       = {HShS2Y:%15d}
hS1        = {HShS1:%15d}
hS2        = {HShS2:%15d}
hUNUSED2   = {HShUNUSED2:%15d}
hUNUSED3   = {HShUNUSED3:%15d}
HMSPRE     = {HSHMSPRE:%15d}
hUNUSED4   = {HShUNUSED4:%15d}
COINPRE    = {HSCOINPRE:%15d}
PEDPRE     = {HSPEDPRE:%15d}
HMSTRG     = {HSHMSTRG:%15d}
hUNUSED5   = {HShUNUSED5:%15d}
COINTRG    = {HSCOINTRG:%15d}
PEDTRG     = {HSPEDTRG:%15d}

DA0C: hCAL
HCAL1      = {HSHCAL1:%15d}
HCAL2      = {HSHCAL2:%15d}
HCAL3      = {HSHCAL3:%15d}
HCAL4      = {HSHCAL4:%15d}
HCAL5      = {HSHCAL5:%15d}
HCAL6      = {HSHCAL6:%15d}
HCAL7      = {HSHCAL7:%15d}
HCAL8      = {HSHCAL8:%15d}
HCAL9      = {HSHCAL9:%15d}
HCAL10     = {HSHCAL10:%15d}
HCAL11     = {HSHCAL11:%15d}
HCAL12     = {HSHCAL12:%15d}
HCAL13     = {HSHCAL13:%15d}
HCAL14     = {HSHCAL14:%15d}
HCAL15     = {HSHCAL15:%15d}
HCAL16     = {HSHCAL16:%15d}

DA0D: sS1X
SS1X1      = {HSSS1X1:%15d}
SS1X2      = {HSSS1X2:%15d}
SS1X3      = {HSSS1X3:%15d}
SS1X4      = {HSSS1X4:%15d}
SS1X5      = {HSSS1X5:%15d}
SS1X6      = {HSSS1X6:%15d}
SS1X7      = {HSSS1X7:%15d}
SS1X8      = {HSSS1X8:%15d}
SS1X9      = {HSSS1X9:%15d}
SS1X10     = {HSSS1X10:%15d}
SS1X11     = {HSSS1X11:%15d}
SS1X12     = {HSSS1X12:%15d}
SS1X13     = {HSSS1X13:%15d}
SS1X14     = {HSSS1X14:%15d}
SS1X15     = {HSSS1X15:%15d}
SS1X16     = {HSSS1X16:%15d}

DA0E: sS1Y
SS1Y1      = {HSSS1Y1:%15d}
SS1Y2      = {HSSS1Y2:%15d}
SS1Y3      = {HSSS1Y3:%15d}
SS1Y4      = {HSSS1Y4:%15d}
SS1Y5      = {HSSS1Y5:%15d}
SS1Y6      = {HSSS1Y6:%15d}
SS1Y7      = {HSSS1Y7:%15d}
SS1Y8      = {HSSS1Y8:%15d}
SS1Y9      = {HSSS1Y9:%15d}
SS1Y10     = {HSSS1Y10:%15d}
SS1Y11     = {HSSS1Y11:%15d}
SS1Y12     = {HSSS1Y12:%15d}
SS1Y13     = {HSSS1Y13:%15d}
SS1Y14     = {HSSS1Y14:%15d}
SS1Y15     = {HSSS1Y15:%15d}
SS1Y16     = {HSSS1Y16:%15d}
  
DA0F: sS2X+
SS2XP1     = {HSSS2XP1:%15d}
SS2XP2     = {HSSS2XP2:%15d}
SS2XP3     = {HSSS2XP3:%15d}
SS2XP4     = {HSSS2XP4:%15d}
SS2XP5     = {HSSS2XP5:%15d}
SS2XP6     = {HSSS2XP6:%15d}
SS2XP7     = {HSSS2XP7:%15d}
SS2XP8     = {HSSS2XP8:%15d}
SS2XP9     = {HSSS2XP9:%15d}
SS2XP10    = {HSSS2XP10:%15d}
SS2XP11    = {HSSS2XP11:%15d}
SS2XP12    = {HSSS2XP12:%15d}
SS2XP13    = {HSSS2XP13:%15d}
SS2XP14    = {HSSS2XP14:%15d}
SS2XP15    = {HSSS2XP15:%15d}
SS2XP16    = {HSSS2XP16:%15d}

DA10: sS2X-
SS2XM1     = {HSSS2XM1:%15d}
SS2XM2     = {HSSS2XM2:%15d}
SS2XM3     = {HSSS2XM3:%15d}
SS2XM4     = {HSSS2XM4:%15d}
SS2XM5     = {HSSS2XM5:%15d}
SS2XM6     = {HSSS2XM6:%15d}
SS2XM7     = {HSSS2XM7:%15d}
SS2XM8     = {HSSS2XM8:%15d}
SS2XM9     = {HSSS2XM9:%15d}
SS2XM10    = {HSSS2XM10:%15d}
SS2XM11    = {HSSS2XM11:%15d}
SS2XM12    = {HSSS2XM12:%15d}
SS2XM13    = {HSSS2XM13:%15d}
SS2XM14    = {HSSS2XM14:%15d}
SS2XM15    = {HSSS2XM15:%15d}
SS2XM16    = {HSSS2XM16:%15d}

DA11: sS2Y
SS2Y1      = {HSSS2Y1:%15d}
SS2Y2      = {HSSS2Y2:%15d}
SS2Y3      = {HSSS2Y3:%15d}
SS2Y4      = {HSSS2Y4:%15d}
SS2Y5      = {HSSS2Y5:%15d}
SS2Y6      = {HSSS2Y6:%15d}
SS2Y7      = {HSSS2Y7:%15d}
SS2Y8      = {HSSS2Y8:%15d}
SS2Y9      = {HSSS2Y9:%15d}
SS2Y10     = {HSSS2Y10:%15d}
SS2Y11     = {HSSS2Y11:%15d}
SS2Y12     = {HSSS2Y12:%15d}
SS2Y13     = {HSSS2Y13:%15d}
SS2Y14     = {HSSS2Y14:%15d}
SS2Y15     = {HSSS2Y15:%15d}
SS2Y16     = {HSSS2Y16:%15d}

DA12: sHODO spare
SPHODO1    = {HSSPHODO1:%15d}
SPHODO2    = {HSSPHODO2:%15d}
SPHODO3    = {HSSPHODO3:%15d}
SPHODO4    = {HSSPHODO4:%15d}
SPHODO5    = {HSSPHODO5:%15d}
SPHODO6    = {HSSPHODO6:%15d}
SPHODO7    = {HSSPHODO7:%15d}
SPHODO8    = {HSSPHODO8:%15d}
SPHODO9    = {HSSPHODO9:%15d}
SPHODO10   = {HSSPHODO10:%15d}
SPHODO11   = {HSSPHODO11:%15d}
SPHODO12   = {HSSPHODO12:%15d}
SPHODO13   = {HSSPHODO13:%15d}
SPHODO14   = {HSSPHODO14:%15d}
SPHODO15   = {HSSPHODO15:%15d}
SPHODO16   = {HSSPHODO16:%15d}

DA13: strig1
sUNUSED1   = {HSsUNUSED1:%15d}
sPRE50     = {HSsPRE50:%15d}
sUNUSED2   = {HSsUNUSED2:%15d}
sPRE150    = {HSsPRE150:%15d}
sUNUSED3   = {HSsUNUSED3:%15d}
sUNUSED4   = {HSsUNUSED4:%15d}
sPRE100    = {HSsPRE100:%15d}
sUNUSED5   = {HSsUNUSED5:%15d}
sUNUSED6   = {HSsUNUSED6:%15d}
sPRE200    = {HSsPRE200:%15d}
sSTOF      = {HSsSTOF:%15d}
sSCIN      = {HSsSCIN:%15d}
sELREAL    = {HSsELREAL:%15d}
sPIPRE     = {HSsPIPRE:%15d}
sELCLEAN   = {HSsELCLEAN:%15d}
sPRETRG    = {HSsPRETRG:%15d}

DA14: strig2
sBCM1      = {HSsBCM1:%15d}
sBCM2      = {HSsBCM2:%15d}
sUNUSED7   = {HSsUNUSED7:%15d}
sUNUSED8   = {HSsUNUSED8:%15d}
sCLOCK     = {HSsCLOCK:%15d}
sUNUSED9   = {HSsUNUSED9:%15d}
sUNUSED10  = {HSsUNUSED10:%15d}
sUNUSED11  = {HSsUNUSED11:%15d}
sPION      = {HSsPION:%15d}
sCER       = {HSsCER:%15d}
sELHI      = {HSsELHI:%15d}
sELLO      = {HSsELLO:%15d}
sPRHI      = {HSsPRHI:%15d}
sPRLO      = {HSsPRLO:%15d}
sSHLO      = {HSsSHLO:%15d}
sADCGATES  = {HSsADCGATES:%15d}

DA15: sHODO
sS1X       = {HSsS1X:%15d}
sS1Y       = {HSsS1Y:%15d}
sS2X       = {HSsS2X:%15d}
sS2Y       = {HSsS2Y:%15d}
sS1        = {HSsS1:%15d}
sS2        = {HSsS2:%15d}
SHODO7     = {HSSHODO7:%15d}
SHODO8     = {HSSHODO8:%15d}
SHODO9     = {HSSHODO9:%15d}
SOSPRE     = {HSSOSPRE:%15d}
SHODO11    = {HSSHODO11:%15d}
SHODO12    = {HSSHODO12:%15d}
SHODO13    = {HSSHODO13:%15d}
SOSTRG     = {HSSOSTRG:%15d}
SHODO15    = {HSSHODO15:%15d}
SHODO16    = {HSSHODO16:%15d}

--------------------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------------

General Format
signal   =   counts (  rate-Hz )


Horizontal drift chamber z positions:
Chamber 1: {hdc_zpos[0]:%6.2f} {hdc_zpos[1]:%6.2f} {hdc_zpos[2]:%6.2f} 
	   {hdc_zpos[3]:%6.2f} {hdc_zpos[4]:%6.2f} {hdc_zpos[5]:%6.2f} 
Chamber 2: {hdc_zpos[6]:%6.2f} {hdc_zpos[7]:%6.2f} {hdc_zpos[8]:%6.2f} 
           {hdc_zpos[9]:%6.2f} {hdc_zpos[10]:%6.2f} {hdc_zpos[11]:%6.2f} 

The expression result can be formatted by putting a ":" followed by
a c-style format after the expression.

The HMS reconstruction coefficient file name is {h_recon_coeff_filename}
The names of the HMS drift chamber planes are: 
{hdc_plane_names}

DC Events: {hdc_tot_events}
Hit in chamber: {hdc_cham_hits[0]/hdc_tot_events:%.3f} {hdc_cham_hits[1]/hdc_tot_events:%.3f}
Hit in plane: {hdc_events[0]/hdc_tot_events:%.3f}  {hdc_events[1]/hdc_tot_events:%.3f} 
              {hdc_events[2]/hdc_tot_events:%.3f}  {hdc_events[3]/hdc_tot_events:%.3f} 
              {hdc_events[4]/hdc_tot_events:%.3f}  {hdc_events[5]/hdc_tot_events:%.3f} 
              {hdc_events[6]/hdc_tot_events:%.3f}  {hdc_events[7]/hdc_tot_events:%.3f} 
              {hdc_events[8]/hdc_tot_events:%.3f}  {hdc_events[9]/hdc_tot_events:%.3f} 
              {hdc_events[10]/hdc_tot_events:%.3f} {hdc_events[11]/hdc_tot_events:%.3f}

Run #{gen_run_number}
first event = {gen_run_starting_event:%7d}
last event  = {gen_event_id_number:%7d}


